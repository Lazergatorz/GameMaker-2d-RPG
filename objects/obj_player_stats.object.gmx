<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init player stats

hp = 5;
maxhp = hp;
stamina = 10;
maxstamina = stamina;
level = 1;
xp = 0;
maxxp = 3;
attackstr = 1;
draw_set_colour(c_white);

// get/set player's start position
if(instance_exists(obj_player)){
    player_xstart = obj_player.x;
    player_ystart = obj_player.y;
} else {
    player_xstart = 0;
    player_ystart = 0;
}


// keep track of rooms for pause menu
previous_room = room;

// init action (via macro)
room_start_action = NEW_ROOM;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// dash regen alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player stats update

// prevent negative hp
if (hp &lt; 0 ){
    hp = 0;
}

// stamina regen if stamina is not full and after dash timer has expired
//(every room frame it fills back up with 1 )

if (stamina &lt; maxstamina  &amp;&amp; alarm[0] == -1){
    stamina++;
}


// pause 

if(obj_input.pause_key){
    if(room != rm_pause_menu){
        // make sure player and stats do not appear in pause menu (room)
        if(instance_exists(obj_player)){
            obj_player.persistent = false; 
        }
        if(instance_exists(obj_player_stats)){
            obj_player_stats.visible = false; 
        }
        // store room player is in before pause
        previous_room = room;
        room_persistent = true;
        // display pause menu
        room_goto(rm_pause_menu);
        
    } else {
        // exit pause screen and display room player was in
        room_goto(previous_room);        
    }
    // can not trigger pause when in pause state
    obj_input.pause_key = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init player start position

if(room == rm_pause_menu) exit;

// determine what should happen when the room starts
switch(room_start_action){
    case RESUME:
        break;
    case NEW_ROOM:
    default:
        if(instance_exists(obj_player)){
            player_xstart = obj_player.x;
            player_ystart = obj_player.y;            
        }
        break;
    case LOAD:
        scr_load_game();
        break;
}

room_persistent = false;
room_start_action = NEW_ROOM;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the stats in the viewport

draw_text(32,16, "HP: "+ string(hp) + "/" + string(maxhp));
draw_text(32,32, "STA: "+ string(stamina) + "/" + string(maxstamina));
draw_text(32,48, "LVL: "+ string(level));
draw_text(32,64, "XP: "+ string(xp) + "/" + string(maxxp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
